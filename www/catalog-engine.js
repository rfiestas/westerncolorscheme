var filtersData={},colorSchemaData={};$(document).ready(function(){const t=$("#reset");t.on("click",function(){$(".custom-control-input").prop("checked",!1).trigger("change")});const e=$(".custom-control-input");e.on("change",function(){key=$(this).val().split("#")[0];const n=$(`[data-${key}]`),s=e.filter(":checked").get().map(e=>e.value);if(!s.length)return document.getElementById("cube-summary").innerHTML=``,document.getElementById("modal-cube-summary").innerHTML=``,n.removeClass("visually-hidden");var t=new Object;s.forEach(e=>{var s=e.split("#"),n=s[0],o=s[1];n in t?t[n].push(o):t[n]=[o]});let o=0;n.each(function(){var e,s,i,n=0;for(e in t){const o=$(this).data(e.toLowerCase());o.includes(",")?(s=new Set([].concat(t[e],o.split(","))),i=[].concat(t[e],o.split(",")),s.size<i.length&&(n+=1)):t[e].includes(o)&&(n+=1)}n==Object.keys(t).length?($(this).removeClass("visually-hidden"),o++):$(this).addClass("visually-hidden")});let i=" ("+resultsTemplate(Object.keys(t).length,"Filter")+", "+resultsTemplate(o,"Result")+")";document.getElementById("cube-summary").innerHTML=i,document.getElementById("modal-cube-summary").innerHTML=i})}),document.getElementById("view360").addEventListener("hidden.bs.modal",function(){window.CI360.destroy()}),document.getElementById("view360").addEventListener("shown.bs.modal",function(){window.CI360.init()});function openView360(e,t){let n=`images/cubes/view-360/${e}-${t}/`;document.getElementById("view-label").innerHTML=`${e} ${t}`,document.getElementById("cube-360").setAttribute("data-folder",n),$("#view360").modal("show")}function resultsTemplate(e,t){let n="s";return e==1&&(n=""),`${e} ${t}${n}`}function view360Template(e,t,n){let s=getfilterDataKey("View360","Icon")+" text-"+getfilterDataKey("View360","Color");return e?`<a class="cube-list-favourite order-2" href="#View360/${t}-${n}" title="${t}-${n} 360 view" onclick="openView360('${t}', '${n}')"><i class="fas ${s}"></i></a>`:``}document.addEventListener("DOMContentLoaded",function(){let t;if("IntersectionObserver"in window){t=document.querySelectorAll(".lazy-load");let e=new IntersectionObserver(function(t){t.forEach(function(t){if(t.isIntersecting){let n=t.target;n.src=n.dataset.src,n.classList.remove("lazy-load"),e.unobserve(n)}})});t.forEach(function(t){e.observe(t)})}else{let n;t=document.querySelectorAll(".lazy-load");function e(){n&&clearTimeout(n),n=setTimeout(function(){let n=window.pageYOffset;t.forEach(function(e){e.offsetTop<window.innerHeight+n&&(e.src=e.dataset.src,e.classList.remove("lazy-load"))}),t.length==0&&(document.removeEventListener("scroll",e),window.removeEventListener("resize",e),window.removeEventListener("orientationChange",e))},20)}document.addEventListener("scroll",e),window.addEventListener("resize",e),window.addEventListener("orientationChange",e)}})